
&Пластилин(Значение = "junit", Тип = "Массив")
Перем АдаптерыЮнитТестов;

&Пластилин 
Перем ТаблицаРезультатовТестов;

&Пластилин("ДетальнаяТаблицаРезультатовТестов")
&Табакерка 
Перем ФабрикаДетальныхЗаписей;

&Пластилин 
Перем РаботаСДЖСОН;

&Желудь
&Прозвище("ПарсерТестов")
Процедура ПриСозданииОбъекта()
	
КонецПроцедуры

Функция ТабилцаРезультатов() Экспорт
	ОбновитьТаблицу();
	Возврат ТаблицаРезультатовТестов;
КонецФункции

Процедура ОбновитьТаблицу()
	Для каждого Адаптер Из АдаптерыЮнитТестов Цикл
		ДополнитьТаблицуПоАдаптеру(Адаптер);
	КонецЦикла;
КонецПроцедуры

Процедура ДополнитьТаблицуПоАдаптеру(Адаптер)
	Каталог = Адаптер.ПодкаталогОтчетов();
	Представление = Адаптер.Представление;

	ПодкаталогиОтчетов = НайтиФайлы(Каталог, "*");

	Для Каждого ПодкаталогОтчета Из ПодкаталогиОтчетов Цикл
		Если Не ПодкаталогОтчета.ЭтоКаталог() Тогда
			Продолжить;
		КонецЕсли;

		ПутьМетаданных = ОбъединитьПути(ПодкаталогОтчета.ПолноеИмя, Адаптер.ИмяФайлаМетаданных());
		Метаданные = РаботаСДЖСОН.ПрочитатьИзФайла(ПутьМетаданных);

		Если Метаданные = Неопределено Тогда
			ВызватьИсключение "Не удалось прочитать метаданные отчета из файла " + ПутьМетаданных;
		КонецЕсли;

		Если ЕстьЗаписьПоИдентификатору(Метаданные.Идентификатор) Тогда
			Продолжить;
		КонецЕсли;

		НоваяСтрокаРезультата = ТаблицаРезультатовТестов.Добавить();
		НоваяСтрокаРезультата.Парсер = ЭтотОбъект;
		НоваяСтрокаРезультата.ВидТестов = Метаданные.Тип;
		НоваяСтрокаРезультата.Дата = Метаданные.Дата;
		НоваяСтрокаРезультата.Идентификатор = Метаданные.Идентификатор;

		Результат = ПолучитьРезультаты(ПодкаталогОтчета.ПолноеИмя);

		НоваяСтрокаРезультата.Успешно = Результат.Успешно;
		НоваяСтрокаРезультата.Результаты = Результат.Детали;
		
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьРезультаты(Каталог)
	Результат = Новый Структура("Успешно, Детали");

	Детали = ФабрикаДетальныхЗаписей.Достать();

	Результат.Детали = Детали;

	Возврат Результат;
КонецФункции

Функция ЕстьЗаписьПоИдентификатору(ИдДляПоиска)
	Возврат ТаблицаРезультатовТестов.Найти(ИдДляПоиска) <> Неопределено; 
КонецФункции