#Использовать asserts
#Использовать "../src/Классы/core"

&Тест
Процедура ФормированиеОтчета() Экспорт

	// Дано
	ЧтениеОтчетовБСЛЛС = Новый ЧтениеОтчетовБСЛЛС("tests/features", "bslls_reports", ".reportmetadata");

	// Когда
	ТаблицаОтчетов = ЧтениеОтчетовБСЛЛС.ТаблицаОтчетов();
	ТаблицаОтчетов = ЧтениеОтчетовБСЛЛС.ТаблицаОтчетов();

	// Тогда
	Ожидаем.Что(ТаблицаОтчетов.Количество(), "Количество отчетов").Равно(2);
	Ожидаем.Что(ТаблицаОтчетов[1].Идентификатор, "Идентификатор отчета").Равно("f714fdec-a6d9-4d8d-9638-f590e7f113bc");
	Ожидаем.Что(ТаблицаОтчетов[1].Дата, "Дата отчета").Равно(Дата(2024, 08, 27, 13, 04, 35));
	Ожидаем.Что(ТаблицаОтчетов[1].КаталогИсходников, "Каталог исходников").Равно("tests/tmp/conf/src");
	Ожидаем.Что(ТаблицаОтчетов[1].Цель, "Цель отчета").Равно("Конфигурация");
	Ожидаем.Что(ТаблицаОтчетов[1].Замечания, "Замечания").Равно(Неопределено);
	Ожидаем.Что(ТаблицаОтчетов[1].Файлы.Количество(), "Файлы для анализа").Равно(1);

КонецПроцедуры

&Тест
Процедура ЧтениеФайлаЗамечаний() Экспорт

	// Дано
	ЗамечанияБСЛЛС = Новый ЗамечанияБСЛЛС();
	Файл = "tests/features/bslls_reports/2024-08-27-13-04-35-f714fdec-a6d9-4d8d-9638-f590e7f113bc/bsl-generic-json.json";
	
	// Когда
	ЗамечанияБСЛЛС.ДобавитьЗамеченияИзФайла(Файл);
	ЗамечанияБСЛЛС.ДобавитьЗамеченияИзФайла(Файл);

	Замечания = ЗамечанияБСЛЛС.Получить();

	// Тогда

	Ожидаем.Что(Замечания.Количество(), "Количество замечаний").Равно(14);

КонецПроцедуры